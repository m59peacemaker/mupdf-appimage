name: update
on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 */2 * * *"
env:
  SOURCE: ArtifexSoftware/mupdf
  SOURCE_DIR: ${{ github.workspace }}/mupdf
  PROJECT_ROOT: ${{ github.workspace }}/project-root
jobs:
  update:
    runs-on: "ubuntu-16.04"
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          path: project-root
          fetch-depth: 0
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.SOURCE }}
          path: mupdf
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: set_build_tag
        working-directory: project-root
        run: (cd ci && npm install && ./scripts/set_build_tag.js)
      - id: build
        if: steps.set_build_tag.outputs.build_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_TAG: ${{ steps.set_build_tag.outputs.build_tag }}
        working-directory: mupdf
        run: ${{ github.workspace }}/project-root/ci/scripts/build.sh
      - id: create_release
        if: steps.build.outputs.mupdf_AppImage_path && steps.build.outputs.mutool_AppImage_path
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.set_build_tag.outputs.build_tag }}
          release_name: ${{ steps.set_build_tag.outputs.build_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: upload-mupdf-appimage
        if: steps.create_release.outputs.upload_url && steps.build.outputs.mupdf_AppImage_path
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.mupdf_AppImage_path }}
          asset_name: ${{ steps.build.outputs.mupdf_AppImage_name }}
          asset_content_type: application/vnd.appimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: upload-mutool-appimage
        if: steps.create_release.outputs.upload_url && steps.build.outputs.mutool_AppImage_path
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.mutool_AppImage_path }}
          asset_name: ${{ steps.build.outputs.mutool_AppImage_name }}
          asset_content_type: application/vnd.appimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
